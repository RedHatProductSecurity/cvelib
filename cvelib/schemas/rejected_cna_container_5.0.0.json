{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "cveId": {
      "pattern": "^CVE-[0-9]{4}-[0-9]{4,19}$",
      "type": "string"
    },
    "description": {
      "additionalProperties": false,
      "description": "Text in a particular language with optional alternate markup or formatted representation (e.g., Markdown) or embedded media.",
      "properties": {
        "lang": {
          "$ref": "#/definitions/language"
        },
        "supportingMedia": {
          "description": "Supporting media data for the description such as markdown, diagrams, .. (optional). Similar to RFC 2397 each media object has three main parts: media type, media data value, and an optional boolean flag to indicate if the media data is base64 encoded.",
          "items": {
            "properties": {
              "base64": {
                "default": false,
                "description": "If true then the value field contains the media data encoded in base64. If false then the value field contains the UTF-8 media content.",
                "title": "Encoding",
                "type": "boolean"
              },
              "type": {
                "description": "RFC2046 compliant IANA Media type for eg., text/markdown, text/html.",
                "examples": [
                  "text/markdown",
                  "text/html",
                  "image/png",
                  "image/svg",
                  "audio/mp3"
                ],
                "maxLength": 256,
                "minLength": 1,
                "title": "Media type",
                "type": "string"
              },
              "value": {
                "description": "Supporting media content, up to 16K. If base64 is true, this field stores base64 encoded data.",
                "maxLength": 16384,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "type": "object"
          },
          "minItems": 1,
          "title": "Supporting media",
          "type": "array",
          "uniqueItems": true
        },
        "value": {
          "description": "Plain text description.",
          "maxLength": 4096,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "lang",
        "value"
      ],
      "type": "object"
    },
    "descriptions": {
      "contains": {
        "$ref": "#/definitions/englishLanguageDescription"
      },
      "description": "A list of multi-lingual descriptions of the vulnerability. E.g., [PROBLEMTYPE] in [COMPONENT] in [VENDOR] [PRODUCT] [VERSION] on [PLATFORMS] allows [ATTACKER] to [IMPACT] via [VECTOR]. OR [COMPONENT] in [VENDOR] [PRODUCT] [VERSION] [ROOT CAUSE], which allows [ATTACKER] to [IMPACT] via [VECTOR].",
      "items": {
        "$ref": "#/definitions/description"
      },
      "minItems": 1,
      "type": "array",
      "uniqueItems": true
    },
    "englishLanguage": {
      "description": "BCP 47 language code, language-region, required to be English.",
      "pattern": "^en([_-][A-Za-z]{4})?([_-]([A-Za-z]{2}|[0-9]{3}))?$",
      "type": "string"
    },
    "englishLanguageDescription": {
      "description": "A description with lang set to an English language (en, en_US, en_UK, and so on).",
      "properties": {
        "lang": {
          "$ref": "#/definitions/englishLanguage"
        }
      },
      "required": [
        "lang"
      ],
      "type": "object"
    },
    "language": {
      "default": "en",
      "description": "BCP 47 language code, language-region.",
      "pattern": "^[A-Za-z]{2,4}([_-][A-Za-z]{4})?([_-]([A-Za-z]{2}|[0-9]{3}))?$",
      "type": "string"
    },
    "orgId": {
      "$ref": "#/definitions/uuidType",
      "description": "A UUID for an organization participating in the CVE program. This UUID can be used to lookup the organization record in the user registry service."
    },
    "providerMetadata": {
      "description": "Details related to the information container provider (CNA or ADP).",
      "properties": {
        "dateUpdated": {
          "$ref": "#/definitions/timestamp",
          "description": "Timestamp to be set by the system of record at time of submission. If dateUpdated is provided to the system of record it will be replaced by the current timestamp at the time of submission."
        },
        "orgId": {
          "$ref": "#/definitions/orgId",
          "description": "The container provider's organizational UUID."
        },
        "shortName": {
          "$ref": "#/definitions/shortName",
          "description": "The container provider's organizational short name."
        }
      },
      "required": [
        "orgId"
      ],
      "type": "object"
    },
    "shortName": {
      "description": "A 2-32 character name that can be used to complement an organization's UUID.",
      "maxLength": 32,
      "minLength": 2,
      "type": "string"
    },
    "timestamp": {
      "description": "Date/time format based on RFC3339 and ISO ISO8601, with an optional timezone in the format 'yyyy-MM-ddTHH:mm:ssZZZZ'. If timezone offset is not given, GMT (0000) is assumed.",
      "format": "date-time",
      "pattern": "^(((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30)))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})?$",
      "type": "string"
    },
    "uuidType": {
      "description": "A version 4 (random) universally unique identifier (UUID) as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122#section-4.1.3).",
      "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
      "type": "string"
    }
  },
  "description": "An object containing the vulnerability information provided by a CVE Numbering Authority (CNA) for a rejected CVE ID. There can only be one CNA container per CVE record since there can only be one assigning CNA.",
  "patternProperties": {
    "^x_[^.]*$": {}
  },
  "properties": {
    "providerMetadata": {
      "$ref": "#/definitions/providerMetadata"
    },
    "rejectedReasons": {
      "$ref": "#/definitions/descriptions",
      "description": "Reasons for rejecting this CVE Record."
    },
    "replacedBy": {
      "description": "Contains an array of CVE IDs that this CVE ID was rejected in favor of because this CVE ID was assigned to the vulnerabilities.",
      "items": {
        "$ref": "#/definitions/cveId"
      },
      "minItems": 1,
      "type": "array",
      "uniqueItems": true
    }
  },
  "required": [
    "providerMetadata",
    "rejectedReasons"
  ],
  "title": "rejected_cna_container_5.0.0",
  "type": "object"
}